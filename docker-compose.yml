version: '3.8'

services:
  app1:
    build:
      context: .
      dockerfile: Dockerfile
    links:
      - queue
    depends_on:
      - db
      - queue
    ports:
      - "8500:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/database
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234556789
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - INSTANCE_NAME=first
      - RABBIT_CONNECTION=queue

  app3:
    build:
      context: .
      dockerfile: Dockerfile_UserCatalog
    ports:
      - "8000:8000"
    depends_on:
      - mongo
      - mongo-express

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongovolume:/data/db
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
  queue:
    image: rabbitmq:management
    hostname: rabbit
    ports:
      - "15672:15672"
    volumes:
      - rabbitvolume:/varlib/rabbitmq/
  loader:
    build:
      context: .
      dockerfile: Dockerfile_CatalogConsumer
    environment:
      - RABBIT_CONNECTION=queue
      - REDIS_CONNECTION=redis
    links:
      - queue


  db:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234556789
      - POSTGRES_DB=database
    ports:
      -  "5432"
    volumes:
      - "postgres_db:/var/lib/postgresql/data/"
volumes:
  postgres_db:
  mongovolume:
  rabbitvolume: